{"meta":{"title":"Cacaview's blog.","subtitle":"一个苦逼高中生的博客","description":"","author":"cacaview","url":"https://cacaview.github.io","root":"/"},"pages":[{"title":"关于","date":"2021-12-04T05:12:56.000Z","updated":"2022-12-28T12:42:58.306Z","comments":true,"path":"about/index.html","permalink":"https://cacaview.github.io/about/index.html","excerpt":"","text":"关于我本人是一名苦逼高一（2021）学生，在广西某市某中学摸鱼。个人喜欢听歌，玩游戏，以及折腾各种稀奇古怪的东西。自己学过一些Java，但是忘光了。也学过python，估计忘得差不多了，现在正在玩Linux这个神器的东西。 还有，谁能赞助我一台服务器啊？最近很穷啊！！！ 这些地方我会出没：邮箱：&#49;&#52;&#55;&#53;&#x34;&#x32;&#x39;&#54;&#49;&#x38;&#64;&#113;&#x71;&#46;&#x63;&#x6f;&#109; QQ：1475429618 微信（这个不说）"},{"title":"文章分类","date":"2021-11-06T09:20:05.000Z","updated":"2022-12-28T12:42:58.306Z","comments":true,"path":"categories/index.html","permalink":"https://cacaview.github.io/categories/index.html","excerpt":"","text":""},{"title":"文章标签","date":"2021-11-06T09:24:02.000Z","updated":"2022-12-28T12:42:58.306Z","comments":true,"path":"tags/index.html","permalink":"https://cacaview.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"ArchLinux 更换系统语言","slug":"ArchLinux 更换系统语言","date":"2022-12-28T09:54:18.000Z","updated":"2022-12-28T12:21:21.025Z","comments":true,"path":"2022/12/28/ArchLinux 更换系统语言/","link":"","permalink":"https://cacaview.github.io/2022/12/28/ArchLinux%20%E6%9B%B4%E6%8D%A2%E7%B3%BB%E7%BB%9F%E8%AF%AD%E8%A8%80/","excerpt":"ArchLinux 更换系统语言此方法应该也适用于其他Linux发行版 1.修改/etc/locale.gen文件1vim /etc/locale.gen 或者你喜欢用nano也行： 1nano /etc/locale.gen 找到#zh_CN.UTF-8 UTF-8，把前面的“#”去掉，然后保存配置文件。 2.应用新的locale.gen配置文件用这个命令来令刚刚的修改生效 1sudo locale-gen 3.修改locale.conf文件修改这个文件，添加LANG=zh_CN.UTF-8 也可以用下面的这条指令，要有root权限 1sudo echo &quot;LANG=zh_CN.UTF-8&quot; &gt;&gt; /etc/locale.conf","text":"ArchLinux 更换系统语言此方法应该也适用于其他Linux发行版 1.修改/etc/locale.gen文件1vim /etc/locale.gen 或者你喜欢用nano也行： 1nano /etc/locale.gen 找到#zh_CN.UTF-8 UTF-8，把前面的“#”去掉，然后保存配置文件。 2.应用新的locale.gen配置文件用这个命令来令刚刚的修改生效 1sudo locale-gen 3.修改locale.conf文件修改这个文件，添加LANG=zh_CN.UTF-8 也可以用下面的这条指令，要有root权限 1sudo echo &quot;LANG=zh_CN.UTF-8&quot; &gt;&gt; /etc/locale.conf 4.重启系统系统就会变成中文的界面了。 用图形桌面来设置似乎会更快吧？","categories":[{"name":"Linux","slug":"Linux","permalink":"https://cacaview.github.io/categories/Linux/"}],"tags":[{"name":"arch Linux","slug":"arch-Linux","permalink":"https://cacaview.github.io/tags/arch-Linux/"}]},{"title":"arch系安装搜狗输入法的过程","slug":"arch系安装搜狗输入法的过程","date":"2022-12-28T09:54:18.000Z","updated":"2022-12-28T12:52:18.104Z","comments":true,"path":"2022/12/28/arch系安装搜狗输入法的过程/","link":"","permalink":"https://cacaview.github.io/2022/12/28/arch%E7%B3%BB%E5%AE%89%E8%A3%85%E6%90%9C%E7%8B%97%E8%BE%93%E5%85%A5%E6%B3%95%E7%9A%84%E8%BF%87%E7%A8%8B/","excerpt":"arch系安装搜狗输入法的过程(只是做个笔记) 1.先确定自己的本地语言是不是中文不是的话请看这篇文章：[arch切换系统语言为中文](https://cacaview.github.io/2022/12/28/ArchLinux 更换系统语言&#x2F;) 2.安装fcitx与fcitx-configtool搜狗是fcitx框架下的中文输入法，fcitx-configtool是一款图形化的输入法配置管理工具，使用它可以管理你的输入法。 1sudo pacman -S fcitx-configtool pacman它自己就会安装fcitx-configtool的依赖fcitx，装好后我们直接下一步 3.安装搜狗输入法这里可以直接用yay来安装：","text":"arch系安装搜狗输入法的过程(只是做个笔记) 1.先确定自己的本地语言是不是中文不是的话请看这篇文章：[arch切换系统语言为中文](https://cacaview.github.io/2022/12/28/ArchLinux 更换系统语言&#x2F;) 2.安装fcitx与fcitx-configtool搜狗是fcitx框架下的中文输入法，fcitx-configtool是一款图形化的输入法配置管理工具，使用它可以管理你的输入法。 1sudo pacman -S fcitx-configtool pacman它自己就会安装fcitx-configtool的依赖fcitx，装好后我们直接下一步 3.安装搜狗输入法这里可以直接用yay来安装： 1yay -S fcitx-sogoupinyin 没有yay？你可以看这篇文章：安装yay 4.将fcitx设置为开机自启有些arch重启后，fcitx输入法已经自动启动了，那么这一步可以省略。 1cp /etc/xdg/autostart/fcitx-autostart.desktop ~/.config/autostart/ 5.重启后系统重启后你会发现任务栏中多了一个输入法的配置工具，点击打开。 它大概长这样： 先按”—“键把无关紧要的输入法删去，然后再按”+”键找到”sogoupinyin”并添加即可。","categories":[{"name":"Linux","slug":"Linux","permalink":"https://cacaview.github.io/categories/Linux/"}],"tags":[{"name":"arch Linux","slug":"arch-Linux","permalink":"https://cacaview.github.io/tags/arch-Linux/"}]},{"title":"yay安装失败的解决办法","slug":"yay安装失败的解决方案","date":"2022-12-28T09:54:18.000Z","updated":"2022-12-28T12:20:11.226Z","comments":true,"path":"2022/12/28/yay安装失败的解决方案/","link":"","permalink":"https://cacaview.github.io/2022/12/28/yay%E5%AE%89%E8%A3%85%E5%A4%B1%E8%B4%A5%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/","excerpt":"yay安装失败的解决办法一般的安装方法123$ git clone https://aur.archlinux.org/yay$ cd yay$ makepkg -si 通常情况执行完上面所示命令即可安装成功，但是由于某些问题经常会遇到网络错误的情况，主要原因有如下两点 go语言的软件安装源无法正常访问 github无法访问 所以解决思路要么用科学上网软件，或者以下所说的方法。 解决方法1. go语言换源go语言国内源一般用Goproxy.cn源，官网有换源方法，这里直接写出来： Go 1.13 及以上（推荐） 打开你的终端并执行 12$ go env -w GO111MODULE=on$ go env -w GOPROXY=https://goproxy.cn,direct 完成。 macOS 或 Linux","text":"yay安装失败的解决办法一般的安装方法123$ git clone https://aur.archlinux.org/yay$ cd yay$ makepkg -si 通常情况执行完上面所示命令即可安装成功，但是由于某些问题经常会遇到网络错误的情况，主要原因有如下两点 go语言的软件安装源无法正常访问 github无法访问 所以解决思路要么用科学上网软件，或者以下所说的方法。 解决方法1. go语言换源go语言国内源一般用Goproxy.cn源，官网有换源方法，这里直接写出来： Go 1.13 及以上（推荐） 打开你的终端并执行 12$ go env -w GO111MODULE=on$ go env -w GOPROXY=https://goproxy.cn,direct 完成。 macOS 或 Linux 打开你的终端并执行 12$ export GO111MODULE=on$ export GOPROXY=https://goproxy.cn 或者 123$ echo &quot;export GO111MODULE=on&quot; &gt;&gt; ~/.profile$ echo &quot;export GOPROXY=https://goproxy.cn&quot; &gt;&gt; ~/.profile$ source ~/.profile 完成。 Windows 打开你的 PowerShell 并执行 12C:\\&gt; $env:GO111MODULE = &quot;on&quot;C:\\&gt; $env:GOPROXY = &quot;https://goproxy.cn&quot; 完成以上步骤以后，可以再次尝试 1$ makepkg -si 2.GitHub访问限制修改DNS： Gitub520已经列举了所有的域名和对应的ip地址，可以直接拿来使用，每天都会自动更新。 如果嫌每天手动设置很麻烦，还可以下载SwitchHosts，每天自动更新GitHub520中的内容。 具体还是看人家的readme吧","categories":[{"name":"Linux","slug":"Linux","permalink":"https://cacaview.github.io/categories/Linux/"}],"tags":[{"name":"arch Linux","slug":"arch-Linux","permalink":"https://cacaview.github.io/tags/arch-Linux/"}]},{"title":"yay的安装","slug":"yay的安装","date":"2022-12-28T09:54:18.000Z","updated":"2022-12-28T12:52:59.996Z","comments":true,"path":"2022/12/28/yay的安装/","link":"","permalink":"https://cacaview.github.io/2022/12/28/yay%E7%9A%84%E5%AE%89%E8%A3%85/","excerpt":"","text":"yay的安装1.准备环境yay的安装需要安装两个包：base-devel 包和 git 包： 1sudo pacman -S base-devel git 2.安装yay找一个目录，比如说你的家目录/home/xxx 1git clone https://aur.archlinux.org/yay.git 进入目录并编译。 12cd yaymakepkg -si Manjaro似乎能直接安装： 1sudo pacman -S yay 编译失败了。。。你可以去看这篇文章:yay安装失败的解决方法","categories":[{"name":"Linux","slug":"Linux","permalink":"https://cacaview.github.io/categories/Linux/"}],"tags":[{"name":"arch Linux","slug":"arch-Linux","permalink":"https://cacaview.github.io/tags/arch-Linux/"}]},{"title":"在termux中折腾hexo（3，配置你的网站）","slug":"termux use the hexo3","date":"2022-02-12T07:50:31.000Z","updated":"2022-12-28T09:22:15.932Z","comments":true,"path":"2022/02/12/termux use the hexo3/","link":"","permalink":"https://cacaview.github.io/2022/02/12/termux%20use%20the%20hexo3/","excerpt":"先配置一下你的网站再给别人看吧~ 网站基本配置在你的hexo主目录中有一个叫做_config.yml的文件，它是整个网站的配置文件，里面可以看到hexo的大部分配置。你可以在里面修改网站配置，可前往官网上查看这是网站的配置： title 网站的标题 subtitle 网站副标题 description 网站描述","text":"先配置一下你的网站再给别人看吧~ 网站基本配置在你的hexo主目录中有一个叫做_config.yml的文件，它是整个网站的配置文件，里面可以看到hexo的大部分配置。你可以在里面修改网站配置，可前往官网上查看这是网站的配置： title 网站的标题 subtitle 网站副标题 description 网站描述 author 您的名字 language 网站语言 timezone 网站时区，hexo默认使用你手机上的时区 其中，description主要用于SEO，告诉搜索引擎一个关于你的网站简单描述，通常建议在其中包含您网站的关键词。author参数用于主题显示文章的作者。自己自行配置。或查看官方文档。 这是网址的配置： url 网址，填你的网站域名 root 网站的根目录 permalink 网站的链接格式 permalink_defaults 永久链接中各部分的默认值 对于链接格式，可以到官网上查看中间的默认即可，接下来我们就来换一个主题吧 美化你的网站如果你觉得默认的landscape主题不好看，那么可以在官网的主题中，选择你喜欢的一个主题进行修改就可以啦。这里推荐next主题我们直接在github链接上下载下来，然后放到theme文件夹下就行了，然后再在刚才说的配置文件中把theme换成那个主题文件夹的名字，它就会自动在theme文件夹中搜索你配置的主题。而后进入next这个文件夹，可以看到里面也有一个配置文件_config.xml，有时候它默认是_config.xml.example，把它复制一份，重命名为_config.xml就可以了。 菜单栏在菜单栏中的about中，你是看不到网页的。但你可以：hexo new page about它就会在根目录下source文件夹中新建了一个about文件夹，以及index.md，在index.md中写上你想要写的东西，就可以在网站上展示出来了。如果你想新建一个菜单栏选项，你可以：hexo new page yourdiy然后在主题配置文件的menu菜单栏添加一个 Yourdiy : &#x2F;yourdiy，注意冒号后面要有空格，以及前面的空格要和menu中默认的保持整齐。然后在languages文件夹中，找到zh-CN.yml，在index中添加yourdiy: ‘中文意思’就可以显示中文了。","categories":[{"name":"termux","slug":"termux","permalink":"https://cacaview.github.io/categories/termux/"}],"tags":[{"name":"hexo博客","slug":"hexo博客","permalink":"https://cacaview.github.io/tags/hexo%E5%8D%9A%E5%AE%A2/"}]},{"title":"在termux中折腾hexo（2，让别人看到你的网站）","slug":"termux use the hexo2","date":"2022-02-12T07:37:40.000Z","updated":"2022-12-28T09:22:15.923Z","comments":true,"path":"2022/02/12/termux use the hexo2/","link":"","permalink":"https://cacaview.github.io/2022/02/12/termux%20use%20the%20hexo2/","excerpt":"注册GitHub账号这玩意有手就行，这里直接略去。 创建GitHub的个人仓库有手就行，不过请注意，仓库名必须和你的名字一样，将来要部署到GitHub的时候，才会被识别，也就是（你的名字.github.io）。 生成ssh 本来不想写的在终端中输入：","text":"注册GitHub账号这玩意有手就行，这里直接略去。 创建GitHub的个人仓库有手就行，不过请注意，仓库名必须和你的名字一样，将来要部署到GitHub的时候，才会被识别，也就是（你的名字.github.io）。 生成ssh 本来不想写的在终端中输入： git config --global user.name &quot;你的名字&quot; git config --global user.email &quot;你的GitHub邮箱&quot;再输入一个指令，创建sshssh-keygen -t rsa -C “你的邮箱”这时，你ls一下，会有一个.ssh的文件夹把它点开会发现里面有三个文件。打开GitHub的设置，里面会有一个SSH and GPG keys的玩意，新建一个key，然后把id_rsa.pub（在.ssh文件夹里面）然后在终端里面输入这个指令看看是否成功：ssh -T git@github.com 把你的网站弄到GitHub上打开配置文件_config.yml再最后面写上：deploy: type: git repo: https://github.com/你的名字/你的名字.github.io.git branch: master这个时候要安装deploy-git ，这样你才能用命令把你的网站部署到GitHub。npm install hexo-deployer-git --save然后：hexo cleanhexo generatehexo deploy然后再访问一下http://你的名字.github.io看看是不是可以让别人看到你的网站了？ 指令介绍在这里，hexo clean是清除你之前生成的东西，一般可以不加，hexo generate是生成网页，可以用hexo g来代替，hexo deploy是把网站搞到GitHub上可以用hexo d代替。注意，deploy时系统可能问你用户名和邮箱，照输进去就OK了","categories":[{"name":"termux","slug":"termux","permalink":"https://cacaview.github.io/categories/termux/"}],"tags":[{"name":"hexo博客","slug":"hexo博客","permalink":"https://cacaview.github.io/tags/hexo%E5%8D%9A%E5%AE%A2/"}]},{"title":"使用taskel在大便系统中安装各种东西","slug":"use the taskel","date":"2021-12-04T05:20:18.000Z","updated":"2022-12-28T09:22:15.940Z","comments":true,"path":"2021/12/04/use the taskel/","link":"","permalink":"https://cacaview.github.io/2021/12/04/use%20the%20taskel/","excerpt":"在ubuntu系统中，常用的安装软件命令有apt和pkg。当然，还有一种更为简单的方式。那就是一个叫做tasksel的东西。 tasksel是一个易于使用的软件安装器，他可以快速的安装例如LAMP服务器，邮件服务器 ，DNS服务器之类的软件，有点像宝塔一键安装软件套装一样。 安装tasksel要安装tasksel，只需要一个指令：apt-get install tasksel -y安装Tasksel后，它可以安装一个或多个预定义的软件包组。 用户需要使用几个参数从命令行运行它，当然，它也提供了一个图形用户界面，可以选择要安装的软件。","text":"在ubuntu系统中，常用的安装软件命令有apt和pkg。当然，还有一种更为简单的方式。那就是一个叫做tasksel的东西。 tasksel是一个易于使用的软件安装器，他可以快速的安装例如LAMP服务器，邮件服务器 ，DNS服务器之类的软件，有点像宝塔一键安装软件套装一样。 安装tasksel要安装tasksel，只需要一个指令：apt-get install tasksel -y安装Tasksel后，它可以安装一个或多个预定义的软件包组。 用户需要使用几个参数从命令行运行它，当然，它也提供了一个图形用户界面，可以选择要安装的软件。 tasksel的用法tasksel的一般语法为：sudo tasksel install task_namesudo tasksel remove task_namesudo tasksel command_line_options如果要用他的图像界面，则只需要：sudo tasksel 你也许看到了有些选项前面有（*），这代表了它已经安装，你可以使用向上和向下箭头，移动红色高亮部分，按空格键来选择软件，并使用Tab键移动到 。 然后按回车键安装 或者，你也可以使用以下命令从命令行中列出所有任务。 注意，在表的第一列， u （卸载）指软件没有安装和i （安装）装置安装的软件。如：sudo tasksel –list-tasks 更多用法使用man帮助页查看更多的用法：man tasksel","categories":[{"name":"Linux","slug":"Linux","permalink":"https://cacaview.github.io/categories/Linux/"}],"tags":[{"name":"技术支持","slug":"技术支持","permalink":"https://cacaview.github.io/tags/%E6%8A%80%E6%9C%AF%E6%94%AF%E6%8C%81/"}]},{"title":"在termux中折腾hexo（1）","slug":"termux use the hexo1","date":"2021-11-28T15:13:40.000Z","updated":"2022-12-28T09:22:15.915Z","comments":true,"path":"2021/11/28/termux use the hexo1/","link":"","permalink":"https://cacaview.github.io/2021/11/28/termux%20use%20the%20hexo1/","excerpt":"本文将会分几个片段来介绍在termux中安装，配置，以及美化hexo博客的过程 hexo介绍Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Coding上，是搭建博客的首选框架。大家可以进入hexo的官网进行详细查看 第一步：安装Githexo的网页托管在Git上。对于Linux来说，安装git真的是太简单了，因为最开始的git就是在Linux系统上写出来的。对此，我们这需要一条指令：sudo apt-get install git","text":"本文将会分几个片段来介绍在termux中安装，配置，以及美化hexo博客的过程 hexo介绍Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Coding上，是搭建博客的首选框架。大家可以进入hexo的官网进行详细查看 第一步：安装Githexo的网页托管在Git上。对于Linux来说，安装git真的是太简单了，因为最开始的git就是在Linux系统上写出来的。对此，我们这需要一条指令：sudo apt-get install git 第二步：安装nodejsHexo是基于nodeJS编写的，所以需要安装一下nodeJs和里面的npm工具。这十分简单，只需两条指令：sudo apt-get install nodejssudo apt-get install npm接着输入以下指令验证是否安装成功：node -vnpm -v 第三步，请出我们的hexo[如果不出什么差错，我们应该就可以来安装hexo了，建议新建一个文件夹，显得没这么乱。输入这个命令安装hexo：npm install -g hexo-cli使用hexo -v来看看是否安装成功接着初始化一下hexo：hexo init myblog这个myblog起什么名字都可以的，你喜欢就好接着：cd myblognpm install至此，hexo的东西就都弄好了。 接下来……弄好之后，你ls一下，你的目录中会有以下文件： node_modules: 依赖包 public：存放生成的页面 scaffolds：生成文章的一些模板 source：用来存放你的文章 themes：主题 _config.yml: 博客的配置文件输入这个指令：hexo ghexo server这是打开hexo的服务，在浏览器输入localhost:4000就可以看到你的博客啦按ctrl+c可以把服务关掉。","categories":[{"name":"termux","slug":"termux","permalink":"https://cacaview.github.io/categories/termux/"}],"tags":[{"name":"hexo博客","slug":"hexo博客","permalink":"https://cacaview.github.io/tags/hexo%E5%8D%9A%E5%AE%A2/"}]}],"categories":[{"name":"Linux","slug":"Linux","permalink":"https://cacaview.github.io/categories/Linux/"},{"name":"termux","slug":"termux","permalink":"https://cacaview.github.io/categories/termux/"}],"tags":[{"name":"arch Linux","slug":"arch-Linux","permalink":"https://cacaview.github.io/tags/arch-Linux/"},{"name":"hexo博客","slug":"hexo博客","permalink":"https://cacaview.github.io/tags/hexo%E5%8D%9A%E5%AE%A2/"},{"name":"技术支持","slug":"技术支持","permalink":"https://cacaview.github.io/tags/%E6%8A%80%E6%9C%AF%E6%94%AF%E6%8C%81/"}]}