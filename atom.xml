<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Cacaview&#39;s blog.</title>
  
  <subtitle>一个苦逼高中生的博客</subtitle>
  <link href="https://cacaview.github.io/atom.xml" rel="self"/>
  
  <link href="https://cacaview.github.io/"/>
  <updated>2023-01-02T03:25:34.404Z</updated>
  <id>https://cacaview.github.io/</id>
  
  <author>
    <name>cacaview</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>arch Linux安装时的错误</title>
    <link href="https://cacaview.github.io/2023/01/02/arch%20Linux%E5%AE%89%E8%A3%85%E6%97%B6Failed%20to%20install%20packages%20to%20new%20root%E9%94%99%E8%AF%AF/"/>
    <id>https://cacaview.github.io/2023/01/02/arch%20Linux%E5%AE%89%E8%A3%85%E6%97%B6Failed%20to%20install%20packages%20to%20new%20root%E9%94%99%E8%AF%AF/</id>
    <published>2023-01-02T02:55:18.000Z</published>
    <updated>2023-01-02T03:25:34.404Z</updated>
    
    <content type="html"><![CDATA[<h1 id="arch-Linux安装时Failed-to-install-packages-to-new-root错误"><a href="#arch-Linux安装时Failed-to-install-packages-to-new-root错误" class="headerlink" title="arch Linux安装时Failed to install packages to new root错误"></a>arch Linux安装时Failed to install packages to new root错误</h1><p>如图，出现以下错误：</p><p><img src="/2023/01/02/arch%20Linux%E5%AE%89%E8%A3%85%E6%97%B6Failed%20to%20install%20packages%20to%20new%20root%E9%94%99%E8%AF%AF/-4a433288792dc172.jpg" alt="-4a433288792dc172"></p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>只需要安装archlinux-keyring即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -S archlinux-keyring</span><br></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;arch-Linux安装时Failed-to-install-packages-to-new-root错误&quot;&gt;&lt;a href=&quot;#arch-Linux安装时Failed-to-install-packages-to-new-root错误&quot; class=&quot;heade</summary>
      
    
    
    
    <category term="Linux" scheme="https://cacaview.github.io/categories/Linux/"/>
    
    
    <category term="arch Linux" scheme="https://cacaview.github.io/tags/arch-Linux/"/>
    
  </entry>
  
  <entry>
    <title>ArchLinux 更换系统语言</title>
    <link href="https://cacaview.github.io/2022/12/28/ArchLinux%20%E6%9B%B4%E6%8D%A2%E7%B3%BB%E7%BB%9F%E8%AF%AD%E8%A8%80/"/>
    <id>https://cacaview.github.io/2022/12/28/ArchLinux%20%E6%9B%B4%E6%8D%A2%E7%B3%BB%E7%BB%9F%E8%AF%AD%E8%A8%80/</id>
    <published>2022-12-28T09:54:18.000Z</published>
    <updated>2022-12-28T12:21:21.025Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ArchLinux-更换系统语言"><a href="#ArchLinux-更换系统语言" class="headerlink" title="ArchLinux 更换系统语言"></a>ArchLinux 更换系统语言</h1><p>此方法应该也适用于其他Linux发行版</p><h2 id="1-修改-etc-locale-gen文件"><a href="#1-修改-etc-locale-gen文件" class="headerlink" title="1.修改/etc/locale.gen文件"></a>1.修改<code>/etc/locale.gen</code>文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/locale.gen</span><br></pre></td></tr></table></figure><p>或者你喜欢用nano也行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/locale.gen</span><br></pre></td></tr></table></figure><p>找到<code>#zh_CN.UTF-8 UTF-8</code>，把前面的“#”去掉，然后保存配置文件。</p><h2 id="2-应用新的locale-gen配置文件"><a href="#2-应用新的locale-gen配置文件" class="headerlink" title="2.应用新的locale.gen配置文件"></a>2.应用新的<code>locale.gen</code>配置文件</h2><p>用这个命令来令刚刚的修改生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo locale-gen</span><br></pre></td></tr></table></figure><h2 id="3-修改locale-conf文件"><a href="#3-修改locale-conf文件" class="headerlink" title="3.修改locale.conf文件"></a>3.修改<code>locale.conf</code>文件</h2><p>修改这个文件，添加<code>LANG=zh_CN.UTF-8</code></p><p>也可以用下面的这条指令，要有root权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">echo</span> <span class="string">&quot;LANG=zh_CN.UTF-8&quot;</span> &gt;&gt; /etc/locale.conf</span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="4-重启系统"><a href="#4-重启系统" class="headerlink" title="4.重启系统"></a>4.重启系统</h2><p>系统就会变成中文的界面了。</p><p>用图形桌面来设置似乎会更快吧？</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;ArchLinux-更换系统语言&quot;&gt;&lt;a href=&quot;#ArchLinux-更换系统语言&quot; class=&quot;headerlink&quot; title=&quot;ArchLinux 更换系统语言&quot;&gt;&lt;/a&gt;ArchLinux 更换系统语言&lt;/h1&gt;&lt;p&gt;此方法应该也适用于其他Linux发行版&lt;/p&gt;
&lt;h2 id=&quot;1-修改-etc-locale-gen文件&quot;&gt;&lt;a href=&quot;#1-修改-etc-locale-gen文件&quot; class=&quot;headerlink&quot; title=&quot;1.修改/etc/locale.gen文件&quot;&gt;&lt;/a&gt;1.修改&lt;code&gt;/etc/locale.gen&lt;/code&gt;文件&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vim /etc/locale.gen&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;或者你喜欢用nano也行：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;nano /etc/locale.gen&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;找到&lt;code&gt;#zh_CN.UTF-8 UTF-8&lt;/code&gt;，把前面的“#”去掉，然后保存配置文件。&lt;/p&gt;
&lt;h2 id=&quot;2-应用新的locale-gen配置文件&quot;&gt;&lt;a href=&quot;#2-应用新的locale-gen配置文件&quot; class=&quot;headerlink&quot; title=&quot;2.应用新的locale.gen配置文件&quot;&gt;&lt;/a&gt;2.应用新的&lt;code&gt;locale.gen&lt;/code&gt;配置文件&lt;/h2&gt;&lt;p&gt;用这个命令来令刚刚的修改生效&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo locale-gen&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;3-修改locale-conf文件&quot;&gt;&lt;a href=&quot;#3-修改locale-conf文件&quot; class=&quot;headerlink&quot; title=&quot;3.修改locale.conf文件&quot;&gt;&lt;/a&gt;3.修改&lt;code&gt;locale.conf&lt;/code&gt;文件&lt;/h2&gt;&lt;p&gt;修改这个文件，添加&lt;code&gt;LANG=zh_CN.UTF-8&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;也可以用下面的这条指令，要有root权限&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;LANG=zh_CN.UTF-8&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; /etc/locale.conf&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://cacaview.github.io/categories/Linux/"/>
    
    
    <category term="arch Linux" scheme="https://cacaview.github.io/tags/arch-Linux/"/>
    
  </entry>
  
  <entry>
    <title>arch系安装搜狗输入法的过程</title>
    <link href="https://cacaview.github.io/2022/12/28/arch%E7%B3%BB%E5%AE%89%E8%A3%85%E6%90%9C%E7%8B%97%E8%BE%93%E5%85%A5%E6%B3%95%E7%9A%84%E8%BF%87%E7%A8%8B/"/>
    <id>https://cacaview.github.io/2022/12/28/arch%E7%B3%BB%E5%AE%89%E8%A3%85%E6%90%9C%E7%8B%97%E8%BE%93%E5%85%A5%E6%B3%95%E7%9A%84%E8%BF%87%E7%A8%8B/</id>
    <published>2022-12-28T09:54:18.000Z</published>
    <updated>2023-01-02T02:25:52.912Z</updated>
    
    <content type="html"><![CDATA[<h1 id="arch系安装搜狗输入法的过程"><a href="#arch系安装搜狗输入法的过程" class="headerlink" title="arch系安装搜狗输入法的过程"></a>arch系安装搜狗输入法的过程</h1><p>(只是做个笔记)</p><h2 id="1-先确定自己的本地语言是不是中文"><a href="#1-先确定自己的本地语言是不是中文" class="headerlink" title="1.先确定自己的本地语言是不是中文"></a>1.先确定自己的本地语言是不是中文</h2><p>不是的话请看这篇文章：<a href="https://cacaview.github.io/2022/12/28/arch%E7%B3%BB%E5%AE%89%E8%A3%85%E6%90%9C%E7%8B%97%E8%BE%93%E5%85%A5%E6%B3%95%E7%9A%84%E8%BF%87%E7%A8%8B/">arch系安装搜狗输入法的过程</a></p><h2 id="2-安装fcitx与fcitx-configtool"><a href="#2-安装fcitx与fcitx-configtool" class="headerlink" title="2.安装fcitx与fcitx-configtool"></a>2.安装fcitx与fcitx-configtool</h2><p>搜狗是<code>fcitx</code>框架下的中文输入法，<code>fcitx-configtool</code>是一款图形化的输入法配置管理工具，使用它可以管理你的输入法。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S fcitx-configtool</span><br></pre></td></tr></table></figure><p>pacman它自己就会安装fcitx-configtool的依赖fcitx，装好后我们直接下一步</p><h2 id="3-安装搜狗输入法"><a href="#3-安装搜狗输入法" class="headerlink" title="3.安装搜狗输入法"></a>3.安装搜狗输入法</h2><p>这里可以直接用yay来安装：</p><span id="more"></span><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S fcitx-sogoupinyin</span><br></pre></td></tr></table></figure><p>没有yay？你可以看这篇文章：<a href="https://cacaview.github.io/2022/12/28/yay%E7%9A%84%E5%AE%89%E8%A3%85/">安装yay</a></p><h2 id="4-将fcitx设置为开机自启"><a href="#4-将fcitx设置为开机自启" class="headerlink" title="4.将fcitx设置为开机自启"></a>4.将fcitx设置为开机自启</h2><p>有些arch重启后，fcitx输入法已经自动启动了，那么这一步可以省略。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> /etc/xdg/autostart/fcitx-autostart.desktop ~/.config/autostart/</span><br></pre></td></tr></table></figure><h2 id="5-重启后"><a href="#5-重启后" class="headerlink" title="5.重启后"></a>5.重启后</h2><p>系统重启后你会发现任务栏中多了一个输入法的配置工具，点击打开。</p><p>它大概长这样：</p><p><img src="https://tse2-mm.cn.bing.net/th/id/OIP-C.SXhKO86o3-ZjWVUSWnkFkQHaGM?pid=ImgDet&rs=1" alt="查看源图像"></p><p>先按”—“键把无关紧要的输入法删去，然后再按”+”键找到”sogoupinyin”并添加即可。</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;arch系安装搜狗输入法的过程&quot;&gt;&lt;a href=&quot;#arch系安装搜狗输入法的过程&quot; class=&quot;headerlink&quot; title=&quot;arch系安装搜狗输入法的过程&quot;&gt;&lt;/a&gt;arch系安装搜狗输入法的过程&lt;/h1&gt;&lt;p&gt;(只是做个笔记)&lt;/p&gt;
&lt;h2 id=&quot;1-先确定自己的本地语言是不是中文&quot;&gt;&lt;a href=&quot;#1-先确定自己的本地语言是不是中文&quot; class=&quot;headerlink&quot; title=&quot;1.先确定自己的本地语言是不是中文&quot;&gt;&lt;/a&gt;1.先确定自己的本地语言是不是中文&lt;/h2&gt;&lt;p&gt;不是的话请看这篇文章：&lt;a href=&quot;https://cacaview.github.io/2022/12/28/arch%E7%B3%BB%E5%AE%89%E8%A3%85%E6%90%9C%E7%8B%97%E8%BE%93%E5%85%A5%E6%B3%95%E7%9A%84%E8%BF%87%E7%A8%8B/&quot;&gt;arch系安装搜狗输入法的过程&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;2-安装fcitx与fcitx-configtool&quot;&gt;&lt;a href=&quot;#2-安装fcitx与fcitx-configtool&quot; class=&quot;headerlink&quot; title=&quot;2.安装fcitx与fcitx-configtool&quot;&gt;&lt;/a&gt;2.安装fcitx与fcitx-configtool&lt;/h2&gt;&lt;p&gt;搜狗是&lt;code&gt;fcitx&lt;/code&gt;框架下的中文输入法，&lt;code&gt;fcitx-configtool&lt;/code&gt;是一款图形化的输入法配置管理工具，使用它可以管理你的输入法。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo pacman -S fcitx-configtool&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;pacman它自己就会安装fcitx-configtool的依赖fcitx，装好后我们直接下一步&lt;/p&gt;
&lt;h2 id=&quot;3-安装搜狗输入法&quot;&gt;&lt;a href=&quot;#3-安装搜狗输入法&quot; class=&quot;headerlink&quot; title=&quot;3.安装搜狗输入法&quot;&gt;&lt;/a&gt;3.安装搜狗输入法&lt;/h2&gt;&lt;p&gt;这里可以直接用yay来安装：&lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://cacaview.github.io/categories/Linux/"/>
    
    
    <category term="arch Linux" scheme="https://cacaview.github.io/tags/arch-Linux/"/>
    
  </entry>
  
  <entry>
    <title>yay安装失败的解决办法</title>
    <link href="https://cacaview.github.io/2022/12/28/yay%E5%AE%89%E8%A3%85%E5%A4%B1%E8%B4%A5%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>https://cacaview.github.io/2022/12/28/yay%E5%AE%89%E8%A3%85%E5%A4%B1%E8%B4%A5%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</id>
    <published>2022-12-28T09:54:18.000Z</published>
    <updated>2022-12-28T12:20:11.226Z</updated>
    
    <content type="html"><![CDATA[<h1 id="yay安装失败的解决办法"><a href="#yay安装失败的解决办法" class="headerlink" title="yay安装失败的解决办法"></a>yay安装失败的解决办法</h1><h2 id="一般的安装方法"><a href="#一般的安装方法" class="headerlink" title="一般的安装方法"></a>一般的安装方法</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git clone https://aur.archlinux.org/yay</span><br><span class="line">$ cd yay</span><br><span class="line">$ makepkg -si</span><br></pre></td></tr></table></figure><p>通常情况执行完上面所示命令即可安装成功，但是由于某些问题经常会遇到网络错误的情况，主要原因有如下两点</p><ol><li>go语言的软件安装源无法正常访问</li><li>github无法访问</li></ol><p>所以解决思路要么用科学上网软件，或者以下所说的方法。</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><h3 id="1-go语言换源"><a href="#1-go语言换源" class="headerlink" title="1. go语言换源"></a><strong>1. go语言换源</strong></h3><p>go语言国内源一般用<a href="https://goproxy.cn/">Goproxy.cn</a>源，官网有换源方法，这里直接写出来：</p><p><a href="https://goproxy.cn/#usage-go-113-and-above-recommended">Go 1.13 及以上（推荐）</a></p><p>打开你的终端并执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ go <span class="built_in">env</span> -w GO111MODULE=on</span><br><span class="line">$ go <span class="built_in">env</span> -w GOPROXY=https://goproxy.cn,direct</span><br></pre></td></tr></table></figure><p>完成。</p><p><a href="https://goproxy.cn/#usage-macos-or-linux">macOS 或 Linux</a></p><span id="more"></span><p>打开你的终端并执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">export</span> GO111MODULE=on</span><br><span class="line">$ <span class="built_in">export</span> GOPROXY=https://goproxy.cn</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="string">&quot;export GO111MODULE=on&quot;</span> &gt;&gt; ~/.profile</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">&quot;export GOPROXY=https://goproxy.cn&quot;</span> &gt;&gt; ~/.profile</span><br><span class="line">$ <span class="built_in">source</span> ~/.profile</span><br></pre></td></tr></table></figure><p>完成。</p><p><a href="https://goproxy.cn/#usage-windows">Windows</a></p><p>打开你的 PowerShell 并执行</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\&gt; <span class="variable">$env:GO111MODULE</span> = <span class="string">&quot;on&quot;</span></span><br><span class="line">C:\&gt; <span class="variable">$env:GOPROXY</span> = <span class="string">&quot;https://goproxy.cn&quot;</span></span><br></pre></td></tr></table></figure><p>完成以上步骤以后，可以再次尝试</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ makepkg -si</span><br></pre></td></tr></table></figure><h2 id="2-GitHub访问限制"><a href="#2-GitHub访问限制" class="headerlink" title="2.GitHub访问限制"></a>2.GitHub访问限制</h2><p>修改DNS：</p><p><a href="https://github.com/521xueweihan/GitHub520">Gitub520</a>已经列举了所有的域名和对应的ip地址，可以直接拿来使用，每天都会自动更新。</p><p>如果嫌每天手动设置很麻烦，还可以下载<a href="https://github.com/oldj/SwitchHosts">SwitchHosts</a>，每天自动更新GitHub520中的内容。</p><p>具体还是看人家的readme吧</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;yay安装失败的解决办法&quot;&gt;&lt;a href=&quot;#yay安装失败的解决办法&quot; class=&quot;headerlink&quot; title=&quot;yay安装失败的解决办法&quot;&gt;&lt;/a&gt;yay安装失败的解决办法&lt;/h1&gt;&lt;h2 id=&quot;一般的安装方法&quot;&gt;&lt;a href=&quot;#一般的安装方法&quot; class=&quot;headerlink&quot; title=&quot;一般的安装方法&quot;&gt;&lt;/a&gt;一般的安装方法&lt;/h2&gt;&lt;figure class=&quot;highlight text&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git clone https://aur.archlinux.org/yay&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ cd yay&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ makepkg -si&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;通常情况执行完上面所示命令即可安装成功，但是由于某些问题经常会遇到网络错误的情况，主要原因有如下两点&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;go语言的软件安装源无法正常访问&lt;/li&gt;
&lt;li&gt;github无法访问&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;所以解决思路要么用科学上网软件，或者以下所说的方法。&lt;/p&gt;
&lt;h2 id=&quot;解决方法&quot;&gt;&lt;a href=&quot;#解决方法&quot; class=&quot;headerlink&quot; title=&quot;解决方法&quot;&gt;&lt;/a&gt;解决方法&lt;/h2&gt;&lt;h3 id=&quot;1-go语言换源&quot;&gt;&lt;a href=&quot;#1-go语言换源&quot; class=&quot;headerlink&quot; title=&quot;1. go语言换源&quot;&gt;&lt;/a&gt;&lt;strong&gt;1. go语言换源&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;go语言国内源一般用&lt;a href=&quot;https://goproxy.cn/&quot;&gt;Goproxy.cn&lt;/a&gt;源，官网有换源方法，这里直接写出来：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://goproxy.cn/#usage-go-113-and-above-recommended&quot;&gt;Go 1.13 及以上（推荐）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;打开你的终端并执行&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ go &lt;span class=&quot;built_in&quot;&gt;env&lt;/span&gt; -w GO111MODULE=on&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ go &lt;span class=&quot;built_in&quot;&gt;env&lt;/span&gt; -w GOPROXY=https://goproxy.cn,direct&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;完成。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://goproxy.cn/#usage-macos-or-linux&quot;&gt;macOS 或 Linux&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://cacaview.github.io/categories/Linux/"/>
    
    
    <category term="arch Linux" scheme="https://cacaview.github.io/tags/arch-Linux/"/>
    
  </entry>
  
  <entry>
    <title>yay的安装</title>
    <link href="https://cacaview.github.io/2022/12/28/yay%E7%9A%84%E5%AE%89%E8%A3%85/"/>
    <id>https://cacaview.github.io/2022/12/28/yay%E7%9A%84%E5%AE%89%E8%A3%85/</id>
    <published>2022-12-28T09:54:18.000Z</published>
    <updated>2023-01-02T02:43:13.163Z</updated>
    
    <content type="html"><![CDATA[<h1 id="yay的安装"><a href="#yay的安装" class="headerlink" title="yay的安装"></a>yay的安装</h1><h2 id="1-准备环境"><a href="#1-准备环境" class="headerlink" title="1.准备环境"></a>1.准备环境</h2><p>yay的安装需要安装两个包：<a href="https://aur.archlinux.org/packages/meta-group-base-devel/">base-devel</a> 包和 git 包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S base-devel git</span><br></pre></td></tr></table></figure><h2 id="2-安装yay"><a href="#2-安装yay" class="headerlink" title="2.安装yay"></a>2.安装yay</h2><p>找一个目录，比如说你的家目录<code>/home/xxx</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://aur.archlinux.org/yay.git</span><br></pre></td></tr></table></figure><p>进入目录并编译。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> yay</span><br><span class="line">makepkg -si</span><br></pre></td></tr></table></figure><p> Manjaro似乎能直接安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S yay</span><br></pre></td></tr></table></figure><h3 id="编译失败了。。。"><a href="#编译失败了。。。" class="headerlink" title="编译失败了。。。"></a>编译失败了。。。</h3><p>你可以去看这篇文章:<a href="https://cacaview.github.io/2022/12/28/yay%E5%AE%89%E8%A3%85%E5%A4%B1%E8%B4%A5%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/">yay安装失败的解决方法</a></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;yay的安装&quot;&gt;&lt;a href=&quot;#yay的安装&quot; class=&quot;headerlink&quot; title=&quot;yay的安装&quot;&gt;&lt;/a&gt;yay的安装&lt;/h1&gt;&lt;h2 id=&quot;1-准备环境&quot;&gt;&lt;a href=&quot;#1-准备环境&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="Linux" scheme="https://cacaview.github.io/categories/Linux/"/>
    
    
    <category term="arch Linux" scheme="https://cacaview.github.io/tags/arch-Linux/"/>
    
  </entry>
  
  <entry>
    <title>在termux中折腾hexo（3，配置你的网站）</title>
    <link href="https://cacaview.github.io/2022/02/12/termux%20use%20the%20hexo3/"/>
    <id>https://cacaview.github.io/2022/02/12/termux%20use%20the%20hexo3/</id>
    <published>2022-02-12T07:50:31.000Z</published>
    <updated>2022-12-28T09:22:15.932Z</updated>
    
    <content type="html"><![CDATA[<p>先配置一下你的网站再给别人看吧~</p><h3 id="网站基本配置"><a href="#网站基本配置" class="headerlink" title="网站基本配置"></a>网站基本配置</h3><p>在你的hexo主目录中有一个叫做<code>_config.yml</code>的文件，它是整个网站的配置文件，里面可以看到hexo的大部分配置。你可以在里面修改网站配置，<a href="https://hexo.io/zh-cn/docs/configuration">可前往官网上查看</a><br>这是网站的配置：</p><ul><li><p>title   网站的标题</p></li><li><p>subtitle   网站副标题</p></li><li><p>description    网站描述</p></li></ul><span id="more"></span><ul><li><p>author   您的名字</p></li><li><p>language   网站语言</p></li><li><p>timezone   网站时区，hexo默认使用你手机上的时区</p></li></ul><p>其中，description主要用于SEO，告诉搜索引擎一个关于你的网站简单描述，通常建议在其中包含您网站的关键词。author参数用于主题显示文章的作者。自己自行配置。或查看官方文档。</p><p>这是网址的配置：</p><ul><li><p>url   网址，填你的网站域名</p></li><li><p>root   网站的根目录</p></li><li><p>permalink   网站的链接格式</p></li><li><p>permalink_defaults   永久链接中各部分的默认值</p></li></ul><p>对于链接格式，<a href="https://hexo.io/zh-cn/docs/permalinks">可以到官网上查看</a><br>中间的默认即可，接下来我们就来换一个主题吧</p><h3 id="美化你的网站"><a href="#美化你的网站" class="headerlink" title="美化你的网站"></a>美化你的网站</h3><p>如果你觉得默认的landscape主题不好看，那么可以在官网的主题中，选择你喜欢的一个主题进行修改就可以啦。<a href="https://hexo.io/themes/">这里推荐next主题</a><br>我们直接在github链接上下载下来，然后放到theme文件夹下就行了，然后再在刚才说的配置文件中把theme换成那个主题文件夹的名字，它就会自动在theme文件夹中搜索你配置的主题。<br>而后进入next这个文件夹，可以看到里面也有一个配置文件_config.xml，有时候它默认是_config.xml.example，把它复制一份，重命名为_config.xml就可以了。</p><h3 id="菜单栏"><a href="#菜单栏" class="headerlink" title="菜单栏"></a>菜单栏</h3><p>在菜单栏中的about中，你是看不到网页的。但你可以：<br><code>hexo new page about</code><br>它就会在根目录下source文件夹中新建了一个about文件夹，以及index.md，在index.md中写上你想要写的东西，就可以在网站上展示出来了。<br>如果你想新建一个菜单栏选项，你可以：<br><code>hexo new page yourdiy</code><br>然后在主题配置文件的menu菜单栏添加一个 Yourdiy : &#x2F;yourdiy，注意冒号后面要有空格，以及前面的空格要和menu中默认的保持整齐。然后在languages文件夹中，找到zh-CN.yml，在index中添加yourdiy: ‘中文意思’就可以显示中文了。</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;p&gt;先配置一下你的网站再给别人看吧~&lt;/p&gt;
&lt;h3 id=&quot;网站基本配置&quot;&gt;&lt;a href=&quot;#网站基本配置&quot; class=&quot;headerlink&quot; title=&quot;网站基本配置&quot;&gt;&lt;/a&gt;网站基本配置&lt;/h3&gt;&lt;p&gt;在你的hexo主目录中有一个叫做&lt;code&gt;_config.yml&lt;/code&gt;的文件，它是整个网站的配置文件，里面可以看到hexo的大部分配置。你可以在里面修改网站配置，&lt;a href=&quot;https://hexo.io/zh-cn/docs/configuration&quot;&gt;可前往官网上查看&lt;/a&gt;&lt;br&gt;这是网站的配置：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;title   网站的标题&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;subtitle   网站副标题&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;description    网站描述&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="termux" scheme="https://cacaview.github.io/categories/termux/"/>
    
    
    <category term="hexo博客" scheme="https://cacaview.github.io/tags/hexo%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>在termux中折腾hexo（2，让别人看到你的网站）</title>
    <link href="https://cacaview.github.io/2022/02/12/termux%20use%20the%20hexo2/"/>
    <id>https://cacaview.github.io/2022/02/12/termux%20use%20the%20hexo2/</id>
    <published>2022-02-12T07:37:40.000Z</published>
    <updated>2022-12-28T09:22:15.923Z</updated>
    
    <content type="html"><![CDATA[<h1 id="注册GitHub账号"><a href="#注册GitHub账号" class="headerlink" title="注册GitHub账号"></a>注册GitHub账号</h1><p>这玩意有手就行，这里直接略去。</p><h1 id="创建GitHub的个人仓库"><a href="#创建GitHub的个人仓库" class="headerlink" title="创建GitHub的个人仓库"></a>创建GitHub的个人仓库</h1><p>有手就行，不过请注意，仓库名必须和你的名字一样，将来要部署到GitHub的时候，才会被识别，也就是（你的名字.github.io）。</p><h3 id="生成ssh-本来不想写的"><a href="#生成ssh-本来不想写的" class="headerlink" title="生成ssh 本来不想写的"></a>生成ssh <del>本来不想写的</del></h3><p>在终端中输入：</p><span id="more"></span><p><code>git config --global user.name &quot;你的名字&quot; git config --global user.email &quot;你的GitHub邮箱&quot;</code><br>再输入一个指令，创建ssh<br>ssh-keygen -t rsa -C “你的邮箱”<br>这时，你<code>ls</code>一下，会有一个.ssh的文件夹把它点开会发现里面有三个文件。<br>打开GitHub的设置，里面会有一个SSH and GPG keys的玩意，新建一个key，然后把id_rsa.pub（在.ssh文件夹里面）<br>然后在终端里面输入这个指令看看是否成功：<br><code>ssh -T git@github.com</code></p><h3 id="把你的网站弄到GitHub上"><a href="#把你的网站弄到GitHub上" class="headerlink" title="把你的网站弄到GitHub上"></a>把你的网站弄到GitHub上</h3><p>打开配置文件_config.yml再最后面写上：<br><code>deploy:</code><br>  <code>type: git</code><br>  <code>repo: https://github.com/你的名字/你的名字.github.io.git</code><br>  <code>branch: master</code><br>这个时候要安装deploy-git ，这样你才能用命令把你的网站部署到GitHub。<br><code>npm install hexo-deployer-git --save</code><br>然后：<br><code>hexo clean</code><br><code>hexo generate</code><br><code>hexo deploy</code><br>然后再访问一下<code>http://你的名字.github.io</code>看看是不是可以让别人看到你的网站了？</p><h3 id="指令介绍"><a href="#指令介绍" class="headerlink" title="指令介绍"></a>指令介绍</h3><p>在这里，hexo clean是清除你之前生成的东西，一般可以不加，hexo generate是生成网页，可以用hexo g来代替，hexo deploy是把网站搞到GitHub上可以用hexo d代替。<br>注意，deploy时系统可能问你用户名和邮箱，照输进去就OK了</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;注册GitHub账号&quot;&gt;&lt;a href=&quot;#注册GitHub账号&quot; class=&quot;headerlink&quot; title=&quot;注册GitHub账号&quot;&gt;&lt;/a&gt;注册GitHub账号&lt;/h1&gt;&lt;p&gt;这玩意有手就行，这里直接略去。&lt;/p&gt;
&lt;h1 id=&quot;创建GitHub的个人仓库&quot;&gt;&lt;a href=&quot;#创建GitHub的个人仓库&quot; class=&quot;headerlink&quot; title=&quot;创建GitHub的个人仓库&quot;&gt;&lt;/a&gt;创建GitHub的个人仓库&lt;/h1&gt;&lt;p&gt;有手就行，不过请注意，仓库名必须和你的名字一样，将来要部署到GitHub的时候，才会被识别，也就是（你的名字.github.io）。&lt;/p&gt;
&lt;h3 id=&quot;生成ssh-本来不想写的&quot;&gt;&lt;a href=&quot;#生成ssh-本来不想写的&quot; class=&quot;headerlink&quot; title=&quot;生成ssh 本来不想写的&quot;&gt;&lt;/a&gt;生成ssh &lt;del&gt;本来不想写的&lt;/del&gt;&lt;/h3&gt;&lt;p&gt;在终端中输入：&lt;/p&gt;</summary>
    
    
    
    <category term="termux" scheme="https://cacaview.github.io/categories/termux/"/>
    
    
    <category term="hexo博客" scheme="https://cacaview.github.io/tags/hexo%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>使用taskel在大便系统中安装各种东西</title>
    <link href="https://cacaview.github.io/2021/12/04/use%20the%20taskel/"/>
    <id>https://cacaview.github.io/2021/12/04/use%20the%20taskel/</id>
    <published>2021-12-04T05:20:18.000Z</published>
    <updated>2022-12-28T09:22:15.940Z</updated>
    
    <content type="html"><![CDATA[<p>在ubuntu系统中，常用的安装软件命令有apt和pkg。当然，还有一种更为简单的方式。那就是一个叫做tasksel的东西。</p><p>tasksel是一个易于使用的软件安装器，他可以快速的安装例如LAMP服务器，邮件服务器 ，DNS服务器之类的软件，有点像宝塔一键安装软件套装一样。</p><h2 id="安装tasksel"><a href="#安装tasksel" class="headerlink" title="安装tasksel"></a>安装tasksel</h2><p>要安装tasksel，只需要一个指令：<br>apt-get install tasksel -y<br>安装Tasksel后，它可以安装一个或多个预定义的软件包组。 用户需要使用几个参数从命令行运行它，当然，它也提供了一个图形用户界面，可以选择要安装的软件。</p><span id="more"></span><h2 id="tasksel的用法"><a href="#tasksel的用法" class="headerlink" title="tasksel的用法"></a>tasksel的用法</h2><p>tasksel的一般语法为：<br>sudo tasksel install task_name<br>sudo tasksel remove task_name<br>sudo tasksel command_line_options<br>如果要用他的图像界面，则只需要：<br>sudo tasksel</p><p>你也许看到了有些选项前面有（*），这代表了它已经安装，你可以使用向上和向下箭头，移动红色高亮部分，按空格键来选择软件，并使用Tab键移动到<ok> 。 然后按回车键安装</ok></p><p>或者，你也可以使用以下命令从命令行中列出所有任务。 注意，在表的第一列， u （卸载）指软件没有安装和i （安装）装置安装的软件。<br>如：<br>sudo tasksel –list-tasks</p><h2 id="更多用法"><a href="#更多用法" class="headerlink" title="更多用法"></a>更多用法</h2><p>使用man帮助页查看更多的用法：<br>man tasksel</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;p&gt;在ubuntu系统中，常用的安装软件命令有apt和pkg。当然，还有一种更为简单的方式。那就是一个叫做tasksel的东西。&lt;/p&gt;
&lt;p&gt;tasksel是一个易于使用的软件安装器，他可以快速的安装例如LAMP服务器，邮件服务器 ，DNS服务器之类的软件，有点像宝塔一键安装软件套装一样。&lt;/p&gt;
&lt;h2 id=&quot;安装tasksel&quot;&gt;&lt;a href=&quot;#安装tasksel&quot; class=&quot;headerlink&quot; title=&quot;安装tasksel&quot;&gt;&lt;/a&gt;安装tasksel&lt;/h2&gt;&lt;p&gt;要安装tasksel，只需要一个指令：&lt;br&gt;apt-get install tasksel -y&lt;br&gt;安装Tasksel后，它可以安装一个或多个预定义的软件包组。 用户需要使用几个参数从命令行运行它，当然，它也提供了一个图形用户界面，可以选择要安装的软件。&lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://cacaview.github.io/categories/Linux/"/>
    
    
    <category term="技术支持" scheme="https://cacaview.github.io/tags/%E6%8A%80%E6%9C%AF%E6%94%AF%E6%8C%81/"/>
    
  </entry>
  
  <entry>
    <title>在termux中折腾hexo（1）</title>
    <link href="https://cacaview.github.io/2021/11/28/termux%20use%20the%20hexo1/"/>
    <id>https://cacaview.github.io/2021/11/28/termux%20use%20the%20hexo1/</id>
    <published>2021-11-28T15:13:40.000Z</published>
    <updated>2022-12-28T09:22:15.915Z</updated>
    
    <content type="html"><![CDATA[<p>本文将会分几个片段来介绍在termux中安装，配置，以及美化hexo博客的过程</p><h1 id="hexo介绍"><a href="#hexo介绍" class="headerlink" title="hexo介绍"></a>hexo介绍</h1><p>Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Coding上，是搭建博客的首选框架。大家可以进入hexo的官网进行详细查看</p><h1 id="第一步：安装Git"><a href="#第一步：安装Git" class="headerlink" title="第一步：安装Git"></a>第一步：安装Git</h1><p>hexo的网页托管在Git上。对于Linux来说，安装git真的是太简单了，因为最开始的git就是在Linux系统上写出来的。对此，我们这需要一条指令：<br>sudo apt-get install git</p><span id="more"></span><h1 id="第二步：安装nodejs"><a href="#第二步：安装nodejs" class="headerlink" title="第二步：安装nodejs"></a>第二步：安装nodejs</h1><p>Hexo是基于nodeJS编写的，所以需要安装一下nodeJs和里面的npm工具。这十分简单，只需两条指令：<br>sudo apt-get install nodejs<br>sudo apt-get install npm<br>接着输入以下指令验证是否安装成功：<br>node -v<br>npm -v</p><h1 id="第三步，请出我们的hexo"><a href="#第三步，请出我们的hexo" class="headerlink" title="第三步，请出我们的hexo"></a>第三步，请出我们的hexo</h1><p>[如果不出什么差错，我们应该就可以来安装hexo了，建议新建一个文件夹，显得没这么乱。<br>输入这个命令安装hexo：<br>npm install -g hexo-cli<br>使用hexo -v来看看是否安装成功<br>接着初始化一下hexo：<br>hexo init myblog<br>这个myblog起什么名字都可以的，你喜欢就好<br>接着：<br>cd myblog<br>npm install<br>至此，hexo的东西就都弄好了。</p><h1 id="接下来……"><a href="#接下来……" class="headerlink" title="接下来……"></a>接下来……</h1><p>弄好之后，你ls一下，你的目录中会有以下文件：</p><p>node_modules: 依赖包</p><p>public：存放生成的页面</p><p>scaffolds：生成文章的一些模板</p><p>source：用来存放你的文章</p><p>themes：主题</p><p>_config.yml: 博客的配置文件<br>输入这个指令：<br>hexo g<br>hexo server<br>这是打开hexo的服务，在浏览器输入localhost:4000就可以看到你的博客啦<br>按ctrl+c可以把服务关掉。</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文将会分几个片段来介绍在termux中安装，配置，以及美化hexo博客的过程&lt;/p&gt;
&lt;h1 id=&quot;hexo介绍&quot;&gt;&lt;a href=&quot;#hexo介绍&quot; class=&quot;headerlink&quot; title=&quot;hexo介绍&quot;&gt;&lt;/a&gt;hexo介绍&lt;/h1&gt;&lt;p&gt;Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Coding上，是搭建博客的首选框架。大家可以进入hexo的官网进行详细查看&lt;/p&gt;
&lt;h1 id=&quot;第一步：安装Git&quot;&gt;&lt;a href=&quot;#第一步：安装Git&quot; class=&quot;headerlink&quot; title=&quot;第一步：安装Git&quot;&gt;&lt;/a&gt;第一步：安装Git&lt;/h1&gt;&lt;p&gt;hexo的网页托管在Git上。对于Linux来说，安装git真的是太简单了，因为最开始的git就是在Linux系统上写出来的。对此，我们这需要一条指令：&lt;br&gt;sudo apt-get install git&lt;/p&gt;</summary>
    
    
    
    <category term="termux" scheme="https://cacaview.github.io/categories/termux/"/>
    
    
    <category term="hexo博客" scheme="https://cacaview.github.io/tags/hexo%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
</feed>
